#include<stdio.h>
#include <stdlib.h>
#include <malloc.h>
#include <string.h>

//链表结构体
struct Lnode{
	int data;
	struct Lnode *next;
};

//尾插法创建链表
void CreateListRl(Lnode*L){
	int n,sco;
	char na[20];
	Lnode *p,*r;
	int i=0;
	r=L;
	printf("Please input information:\n");
	while(i<10){
		scanf("%d %s %d",&n,na,&sco);
		p=(struct Lnode *)malloc(sizeof(struct Lnode));
		p->no=n;
		*strcpy(p->name,na);
		p->score=sco;
		r->next=p;
		r=p;
		i++;
	}
	r->next=NULL;
}

//输出链表全部信息
void print(Lnode*L){
	int i=0;
	Lnode *p=L->next;
	printf("Print all information:\n");
	while(p!=NULL){
		printf("%d\n",p->data); //输出信息
		p=p->next;
		i++;
	}

}

//插入链表
Lnode* insert(Lnode*L,int data){
	Lnode *p=L->next;
	while(p!=NULL){
		if((p->no)<data&&((p->next)->no)>data) {
			return p;
			printf("Insert is OK1");//提示信息
			break;
		}
		p=p->next;
	}
	return p;//返回指针
}

//链表查询
Lnode* seach(Lnode*L,int data){
	int flag=1;
	Lnode *p=L->next;
	while(p!=NULL){
		if(p->no==data){
			return p;
			flag=0;
			break;
		}
		p=p->next;
	}
	return p; //返回指针
}

void delent(Lnode*L,Lnode *t){
	Lnode *p;
	p=L->next;
	while(p!=NULL){
		if((p->next)==t){
			p->next=t->next;
			free(t);
			printf("Delent is OK!\n");//提示信息
			break;
		}
		p=p->next;
	}
}
 

int main(){
	int i;
	Lnode *head;
	head=(struct Lnode *)malloc(sizeof(struct Lnode));  //头指针
	return 0;
}
